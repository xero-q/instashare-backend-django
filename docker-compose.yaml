version: '3.8'

services:
  web:
    build: .
    container_name: django_web
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0  # Correctly set Redis URL
      - CELERY_BROKER_URL=redis://redis:6379/0   # Use REDIS_URL
      - CELERY_RESULT_BACKEND=redis://redis:6379/0  # Use REDIS_URL

  db:
    image: postgres:15    
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data_instashare:/var/lib/postgresql/data  
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_db
    ports:
      - "6379:6379"

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A djangobackend worker --loglevel=INFO
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0  # Correctly set Redis URL
      - CELERY_BROKER_URL=redis://redis:6379/0   # Use REDIS_URL
      - CELERY_RESULT_BACKEND=redis://redis:6379/0  # Use REDIS_URL

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A djangobackend beat --loglevel=INFO
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0  # Correctly set Redis URL
      - CELERY_BROKER_URL=redis://redis:6379/0   # Use REDIS_URL
      - CELERY_RESULT_BACKEND=redis://redis:6379/0  # Use REDIS_URL

volumes:
  postgres_data_instashare:
